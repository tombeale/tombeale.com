<!--<?require "inc/formatting.php";headLine("Programming Languages");$showDetails = $_REQUEST["showDetails"];if ($showDetails)	{	$prompt = "Hide Details";	}else	{	$prompt = "Show Details";	}?>--><script language="JavaScript" src="lib/functions.js"></script><script language="JavaScript">		function toggleDetails(flag)		{		if (String(flag) == "1")			document.details.showDetails.value="0";		else			document.details.showDetails.value="1";				getPage('Resume/languages_old.php',3,1)		}		</script><table cellspacing="0" width="95%" border="0">	<tr>		<td>			<a href="JavaScript:toggleDetails('<?echo $showDetails?>')" class="link2"><?echo $prompt?></a>		</td>	</tr>			<?sepLanguages("ASP (VBScript):","High")?>								<?				if ($showDetails)					{				?>								I began using Active Server Pages in the late 90's first in my freelance work using Personal Web Server on Windows 98 as my development server. My last few years at Boeing, I used ASP for several projects on their intranet, usually attaching to an Access Database via an ODBC connection. Examples of this were a utility for tracking the <a class='inline' href="JavaScript:launch('manufact/index.html','height=500,width=800')">production line</a>, a utility for showing the <a class='inline' href="JavaScript:launch('equip/categories.asp?category=3d','height=500,width=800')">skills matrix</a> within the Boeing Graphics Groups, and a utility for entering time.							<?sepLanguages("","")?>								After the move to Corillian, I had the opportunity to work with a group of very skilled people and I acquired a great deal of experience in building components that worked as components in a larger application. In addition, I learned to work within a development team and the importance of adherence to standards.						<?					}			sepLanguages("ASP (JScript):","High")?>							<?				if ($showDetails)					{				?>								While most ASP pages are written in VBScript, IIS also supports JScript. I took over a project about two years ago that was written in JScript and have been using JScrpt ever since. It supports all the functionality that VBScript supports, but has a C-like syntax and supports user-defined objects.						<?					}			sepLanguages("ASPX (C#):","Intermediate")?>							<?				if ($showDetails)					{				?>								Corillian began the move to .Net about a year ago on some larger projects, and I was just coming up to speed on it when I left the company. I'm competent in C#, and understand how to create and implement user controls and custom controls. I also have a good grasp of the fundamentals and how the objects interrelate with one another.						<?					}			sepLanguages("Visual Basic:","High")?>							<?				if ($showDetails)					{				?>								I've used Visual Basic for a long time (since version 1.0), although most of the software I've written has been development utilities.						<?					}			sepLanguages("JavaScript:","High")?>							<?				if ($showDetails)					{				?>								Client-side JavaScript is a constant throughout all websites, and I've been using it since I found out it existed (1998?). Although some JavaScript behavior can be dependent on individual browsers, I've found the core language is surprisingly stable across most platforms. 						<?					}			sepLanguages("DHTML:","High Intermediate")?>							<?				if ($showDetails)					{					?>								I have done some work using Dynamic HTML, although the opportunity hasn't come along as often as I'd like. If you are using IE 5.0 or better, you should be seeing a scrolling text effect under the left nav bar. Some of the examples in the Portfolio section have images that change as the mouse moves over them. The <a href="JavaScript:easterEgg()">easter-egg sample</a> shows DHTML being used to animate an image by changing position and scale (let the logo scroll past twice).							<?					}			sepLanguages("SQL:","Intermediate")?>							<?				if ($showDetails)					{				?>								My use of SQL has been either single commands that get passed to the database through an ODBC connection, or as queries in SQL Analyzer (usually examining a database to see if the values in it are what I'm expecting). I have some experience using SQL to create and manage databases and tables through MySQL (an open-source database used by the Linux community).    						<?					}			sepLanguages("PHP:","Intermediate")?>							<?				if ($showDetails)					{				?>								PHP is a rough equivalent to ASP that is popular on Linux platforms, and is usually implemented as a Mod to the Apache web server. It bears a strong resemblance to PERL, and has exceptional file and string handling functions. I've on a few freelance jobs, and did some development on my own Linux server. Some of the projects involved SQL and a MySQL database, which I also maintain on my own server. 						<?					}			sepLanguages("PERL:","High Intermediate")?>							<?				if ($showDetails)					{				?>								I started using PERL to write CGI scripts, but even after ASP and PHP pushed it out of the market, I continued using it as a batch language on the PC. It's hard to beat if you want to write a quick app for a specific task that doesn't have to be pretty. Example uses were a script that generated a postscript file from an excel spreadsheet full of names and titles (badges for a convention), and converting a (huge) flat file from an IBM mainframe into an RTF file that could be merged into the Boeing Company Phonebook.						<?					}			sepLanguages("HTML (CSS):","High")?>							<?				if ($showDetails)					{				?>								I'm pretty fluent in HTML, since most of what I write generates some kind of HTML code. Cascading Style Sheets are definitely the way to go, since they simplify the HTML and make changes a lot easier to manage.						<?					}			sepLanguages("XML/XSLT:","Intermediate")?>							<?				if ($showDetails)					{				?>								XML was the big rage a few years or so back, and it's still pretty important. At my last job we used it to contain the data returned from the online banking application, which we then either put into an XMLDOM and used directly from the ASP, or transformed it directly into HTML using an XSLT stylesheet.								<?					}				?>		</td>	</tr></table><input type="hidden" name="showDetails" value="<?echo $showDetails?>">